package kotlin.reflect.jvm.internal.impl.load.java.lazy;

import kotlin.jvm.internal.Intrinsics;
import kotlin.reflect.jvm.internal.impl.builtins.ReflectionTypes;
import kotlin.reflect.jvm.internal.impl.descriptors.ModuleDescriptor;
import kotlin.reflect.jvm.internal.impl.descriptors.SupertypeLoopChecker;
import kotlin.reflect.jvm.internal.impl.incremental.components.LookupTracker;
import kotlin.reflect.jvm.internal.impl.load.java.AnnotationTypeQualifierResolver;
import kotlin.reflect.jvm.internal.impl.load.java.JavaClassFinder;
import kotlin.reflect.jvm.internal.impl.load.java.JavaClassesTracker;
import kotlin.reflect.jvm.internal.impl.load.java.components.JavaPropertyInitializerEvaluator;
import kotlin.reflect.jvm.internal.impl.load.java.components.JavaResolverCache;
import kotlin.reflect.jvm.internal.impl.load.java.components.SignaturePropagator;
import kotlin.reflect.jvm.internal.impl.load.java.sources.JavaSourceElementFactory;
import kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancement;
import kotlin.reflect.jvm.internal.impl.load.kotlin.DeserializedDescriptorResolver;
import kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinClassFinder;
import kotlin.reflect.jvm.internal.impl.load.kotlin.PackagePartProvider;
import kotlin.reflect.jvm.internal.impl.resolve.sam.SamConversionResolver;
import kotlin.reflect.jvm.internal.impl.serialization.deserialization.ErrorReporter;
import kotlin.reflect.jvm.internal.impl.storage.StorageManager;
import kotlin.reflect.jvm.internal.impl.types.checker.NewKotlinTypeChecker;
import kotlin.reflect.jvm.internal.impl.utils.JavaTypeEnhancementState;

/* compiled from: context.kt */
public final class JavaResolverComponents {
    public final AnnotationTypeQualifierResolver annotationTypeQualifierResolver;
    public final DeserializedDescriptorResolver deserializedDescriptorResolver;
    public final ErrorReporter errorReporter;
    public final JavaClassFinder finder;
    public final JavaClassesTracker javaClassesTracker;
    public final JavaPropertyInitializerEvaluator javaPropertyInitializerEvaluator;
    public final JavaResolverCache javaResolverCache;
    public final JavaTypeEnhancementState javaTypeEnhancementState;
    public final KotlinClassFinder kotlinClassFinder;
    public final NewKotlinTypeChecker kotlinTypeChecker;
    public final LookupTracker lookupTracker;
    public final ModuleDescriptor module;
    public final ModuleClassResolver moduleClassResolver;
    public final PackagePartProvider packagePartProvider;
    public final ReflectionTypes reflectionTypes;
    public final SamConversionResolver samConversionResolver;
    public final JavaResolverSettings settings;
    public final SignatureEnhancement signatureEnhancement;
    public final SignaturePropagator signaturePropagator;
    public final JavaSourceElementFactory sourceElementFactory;
    public final StorageManager storageManager;
    public final SupertypeLoopChecker supertypeLoopChecker;

    public JavaResolverComponents(StorageManager storageManager2, JavaClassFinder javaClassFinder, KotlinClassFinder kotlinClassFinder2, DeserializedDescriptorResolver deserializedDescriptorResolver2, SignaturePropagator signaturePropagator2, ErrorReporter errorReporter2, JavaResolverCache javaResolverCache2, JavaPropertyInitializerEvaluator javaPropertyInitializerEvaluator2, SamConversionResolver samConversionResolver2, JavaSourceElementFactory javaSourceElementFactory, ModuleClassResolver moduleClassResolver2, PackagePartProvider packagePartProvider2, SupertypeLoopChecker supertypeLoopChecker2, LookupTracker lookupTracker2, ModuleDescriptor moduleDescriptor, ReflectionTypes reflectionTypes2, AnnotationTypeQualifierResolver annotationTypeQualifierResolver2, SignatureEnhancement signatureEnhancement2, JavaClassesTracker javaClassesTracker2, JavaResolverSettings javaResolverSettings, NewKotlinTypeChecker newKotlinTypeChecker, JavaTypeEnhancementState javaTypeEnhancementState2) {
        StorageManager storageManager3 = storageManager2;
        JavaClassFinder javaClassFinder2 = javaClassFinder;
        KotlinClassFinder kotlinClassFinder3 = kotlinClassFinder2;
        DeserializedDescriptorResolver deserializedDescriptorResolver3 = deserializedDescriptorResolver2;
        SignaturePropagator signaturePropagator3 = signaturePropagator2;
        ErrorReporter errorReporter3 = errorReporter2;
        JavaResolverCache javaResolverCache3 = javaResolverCache2;
        JavaPropertyInitializerEvaluator javaPropertyInitializerEvaluator3 = javaPropertyInitializerEvaluator2;
        SamConversionResolver samConversionResolver3 = samConversionResolver2;
        JavaSourceElementFactory javaSourceElementFactory2 = javaSourceElementFactory;
        ModuleClassResolver moduleClassResolver3 = moduleClassResolver2;
        PackagePartProvider packagePartProvider3 = packagePartProvider2;
        SupertypeLoopChecker supertypeLoopChecker3 = supertypeLoopChecker2;
        LookupTracker lookupTracker3 = lookupTracker2;
        ReflectionTypes reflectionTypes3 = reflectionTypes2;
        Intrinsics.checkNotNullParameter(storageManager3, "storageManager");
        Intrinsics.checkNotNullParameter(javaClassFinder2, "finder");
        Intrinsics.checkNotNullParameter(kotlinClassFinder3, "kotlinClassFinder");
        Intrinsics.checkNotNullParameter(deserializedDescriptorResolver3, "deserializedDescriptorResolver");
        Intrinsics.checkNotNullParameter(signaturePropagator3, "signaturePropagator");
        Intrinsics.checkNotNullParameter(errorReporter3, "errorReporter");
        Intrinsics.checkNotNullParameter(javaResolverCache3, "javaResolverCache");
        Intrinsics.checkNotNullParameter(javaPropertyInitializerEvaluator3, "javaPropertyInitializerEvaluator");
        Intrinsics.checkNotNullParameter(samConversionResolver3, "samConversionResolver");
        Intrinsics.checkNotNullParameter(javaSourceElementFactory2, "sourceElementFactory");
        Intrinsics.checkNotNullParameter(moduleClassResolver3, "moduleClassResolver");
        Intrinsics.checkNotNullParameter(packagePartProvider3, "packagePartProvider");
        Intrinsics.checkNotNullParameter(supertypeLoopChecker3, "supertypeLoopChecker");
        Intrinsics.checkNotNullParameter(lookupTracker3, "lookupTracker");
        Intrinsics.checkNotNullParameter(moduleDescriptor, "module");
        Intrinsics.checkNotNullParameter(reflectionTypes2, "reflectionTypes");
        Intrinsics.checkNotNullParameter(annotationTypeQualifierResolver2, "annotationTypeQualifierResolver");
        Intrinsics.checkNotNullParameter(signatureEnhancement2, "signatureEnhancement");
        Intrinsics.checkNotNullParameter(javaClassesTracker2, "javaClassesTracker");
        Intrinsics.checkNotNullParameter(javaResolverSettings, "settings");
        Intrinsics.checkNotNullParameter(newKotlinTypeChecker, "kotlinTypeChecker");
        Intrinsics.checkNotNullParameter(javaTypeEnhancementState2, "javaTypeEnhancementState");
        this.storageManager = storageManager3;
        this.finder = javaClassFinder2;
        this.kotlinClassFinder = kotlinClassFinder3;
        this.deserializedDescriptorResolver = deserializedDescriptorResolver3;
        this.signaturePropagator = signaturePropagator3;
        this.errorReporter = errorReporter3;
        this.javaResolverCache = javaResolverCache3;
        this.javaPropertyInitializerEvaluator = javaPropertyInitializerEvaluator3;
        this.samConversionResolver = samConversionResolver3;
        this.sourceElementFactory = javaSourceElementFactory2;
        this.moduleClassResolver = moduleClassResolver3;
        this.packagePartProvider = packagePartProvider3;
        this.supertypeLoopChecker = supertypeLoopChecker3;
        this.lookupTracker = lookupTracker3;
        this.module = moduleDescriptor;
        this.reflectionTypes = reflectionTypes2;
        this.annotationTypeQualifierResolver = annotationTypeQualifierResolver2;
        this.signatureEnhancement = signatureEnhancement2;
        this.javaClassesTracker = javaClassesTracker2;
        this.settings = javaResolverSettings;
        this.kotlinTypeChecker = newKotlinTypeChecker;
        this.javaTypeEnhancementState = javaTypeEnhancementState2;
    }
}
